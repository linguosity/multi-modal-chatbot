'use client'

import React, { useState } from 'react'
import { Button } from '@/components/ui/button'
import { Input } from '@/components/ui/input'
import { FieldHighlight } from '@/components/ui/FieldHighlight'
import { BadgeWrapper } from '@/components/ui/update-badge'
import { useToast } from '@/lib/context/ToastContext'
import { useRecentUpdates } from '@/lib/context/RecentUpdatesContext'

export function FeedbackSystemTest() {
  const [testValue, setTestValue] = useState('')
  const { showToast } = useToast()
  const { addRecentUpdate, isRecentlyUpdated, getFieldChanges } = useRecentUpdates()

  const handleInputChange = (value: string) => {
    setTestValue(value)
    // Simulate field update
    addRecentUpdate('test-section', ['test-field'], 'user_edit')
  }

  const handleToastTest = () => {
    showToast({
      title: 'Test Toast',
      description: 'This is a test of the toast system',
      type: 'success'
    })
  }

  const handleAITest = () => {
    setTestValue('AI Generated Content')
    addRecentUpdate('test-section', ['test-field'], 'ai_update')
    showToast({
      title: 'AI Update',
      description: 'Content generated by AI',
      type: 'ai_update'
    })
  }

  const isUpdated = isRecentlyUpdated('test-section')
  const updateCount = getFieldChanges('test-section').length

  return (
    <div className="max-w-md mx-auto p-6 space-y-4">
      <h2 className="text-xl font-bold">Feedback System Test</h2>
      
      <div className="space-y-2">
        <label className="block text-sm font-medium">Test Input</label>
        <FieldHighlight sectionId="test-section" fieldPath="test-field">
          <Input
            value={testValue}
            onChange={(e) => handleInputChange(e.target.value)}
            placeholder="Type something..."
          />
        </FieldHighlight>
      </div>

      <div className="space-y-2">
        <BadgeWrapper
          badge={isUpdated ? {
            count: updateCount,
            type: 'updated',
            ariaLabel: `Test section (${updateCount} updates)`
          } : undefined}
        >
          <div className="p-2 border rounded">
            Test Section {isUpdated && '(Updated)'}
          </div>
        </BadgeWrapper>
      </div>

      <div className="flex gap-2">
        <Button onClick={handleToastTest} size="sm">
          Test Toast
        </Button>
        <Button onClick={handleAITest} size="sm" variant="outline">
          Test AI Update
        </Button>
      </div>
    </div>
  )
}