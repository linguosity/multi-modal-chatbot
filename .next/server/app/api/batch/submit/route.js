/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/batch/submit/route";
exports.ids = ["app/api/batch/submit/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/next@15.2.2_@opentelemetry+api@1.9.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fbatch%2Fsubmit%2Froute&page=%2Fapi%2Fbatch%2Fsubmit%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbatch%2Fsubmit%2Froute.ts&appDir=%2FUsers%2Fbrandonbrewer%2FDocuments%2FLinguosity%2FLinguosity%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fbrandonbrewer%2FDocuments%2FLinguosity%2FLinguosity&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/.pnpm/next@15.2.2_@opentelemetry+api@1.9.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fbatch%2Fsubmit%2Froute&page=%2Fapi%2Fbatch%2Fsubmit%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbatch%2Fsubmit%2Froute.ts&appDir=%2FUsers%2Fbrandonbrewer%2FDocuments%2FLinguosity%2FLinguosity%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fbrandonbrewer%2FDocuments%2FLinguosity%2FLinguosity&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/.pnpm/next@15.2.2_@opentelemetry+api@1.9.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/.pnpm/next@15.2.2_@opentelemetry+api@1.9.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/.pnpm/next@15.2.2_@opentelemetry+api@1.9.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_brandonbrewer_Documents_Linguosity_Linguosity_src_app_api_batch_submit_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/batch/submit/route.ts */ \"(rsc)/./src/app/api/batch/submit/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/batch/submit/route\",\n        pathname: \"/api/batch/submit\",\n        filename: \"route\",\n        bundlePath: \"app/api/batch/submit/route\"\n    },\n    resolvedPagePath: \"/Users/brandonbrewer/Documents/Linguosity/Linguosity/src/app/api/batch/submit/route.ts\",\n    nextConfigOutput,\n    userland: _Users_brandonbrewer_Documents_Linguosity_Linguosity_src_app_api_batch_submit_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbmV4dEAxNS4yLjJfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wX3JlYWN0LWRvbUAxOC4zLjFfcmVhY3RAMTguMy4xX19yZWFjdEAxOC4zLjEvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1hcHAtbG9hZGVyL2luZGV4LmpzP25hbWU9YXBwJTJGYXBpJTJGYmF0Y2glMkZzdWJtaXQlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmJhdGNoJTJGc3VibWl0JTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGYmF0Y2glMkZzdWJtaXQlMkZyb3V0ZS50cyZhcHBEaXI9JTJGVXNlcnMlMkZicmFuZG9uYnJld2VyJTJGRG9jdW1lbnRzJTJGTGluZ3Vvc2l0eSUyRkxpbmd1b3NpdHklMkZzcmMlMkZhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPSUyRlVzZXJzJTJGYnJhbmRvbmJyZXdlciUyRkRvY3VtZW50cyUyRkxpbmd1b3NpdHklMkZMaW5ndW9zaXR5JmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PXN0YW5kYWxvbmUmcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBK0Y7QUFDdkM7QUFDcUI7QUFDc0M7QUFDbkg7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHlHQUFtQjtBQUMzQztBQUNBLGNBQWMsa0VBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzREFBc0Q7QUFDOUQ7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDMEY7O0FBRTFGIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9Vc2Vycy9icmFuZG9uYnJld2VyL0RvY3VtZW50cy9MaW5ndW9zaXR5L0xpbmd1b3NpdHkvc3JjL2FwcC9hcGkvYmF0Y2gvc3VibWl0L3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcInN0YW5kYWxvbmVcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvYmF0Y2gvc3VibWl0L3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvYmF0Y2gvc3VibWl0XCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9iYXRjaC9zdWJtaXQvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMvYnJhbmRvbmJyZXdlci9Eb2N1bWVudHMvTGluZ3Vvc2l0eS9MaW5ndW9zaXR5L3NyYy9hcHAvYXBpL2JhdGNoL3N1Ym1pdC9yb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHdvcmtBc3luY1N0b3JhZ2UsIHdvcmtVbml0QXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHdvcmtBc3luY1N0b3JhZ2UsXG4gICAgICAgIHdvcmtVbml0QXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgd29ya0FzeW5jU3RvcmFnZSwgd29ya1VuaXRBc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/next@15.2.2_@opentelemetry+api@1.9.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fbatch%2Fsubmit%2Froute&page=%2Fapi%2Fbatch%2Fsubmit%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbatch%2Fsubmit%2Froute.ts&appDir=%2FUsers%2Fbrandonbrewer%2FDocuments%2FLinguosity%2FLinguosity%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fbrandonbrewer%2FDocuments%2FLinguosity%2FLinguosity&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/next@15.2.2_@opentelemetry+api@1.9.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-flight-action-entry-loader.js?actions=%5B%5B%22%2FUsers%2Fbrandonbrewer%2FDocuments%2FLinguosity%2FLinguosity%2Fsrc%2Fapp%2Fapi%2Fbatch%2Fsubmit%2Froute.ts%22%2C%5B%7B%22id%22%3A%2240d97b4f7d3b36c1b5abbf6b5e2ef754202e2eb278%22%2C%22exportedName%22%3A%22POST%22%7D%5D%5D%5D&__client_imported__=!":
/*!**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/next@15.2.2_@opentelemetry+api@1.9.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-flight-action-entry-loader.js?actions=%5B%5B%22%2FUsers%2Fbrandonbrewer%2FDocuments%2FLinguosity%2FLinguosity%2Fsrc%2Fapp%2Fapi%2Fbatch%2Fsubmit%2Froute.ts%22%2C%5B%7B%22id%22%3A%2240d97b4f7d3b36c1b5abbf6b5e2ef754202e2eb278%22%2C%22exportedName%22%3A%22POST%22%7D%5D%5D%5D&__client_imported__=! ***!
  \**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"40d97b4f7d3b36c1b5abbf6b5e2ef754202e2eb278\": () => (/* reexport safe */ _Users_brandonbrewer_Documents_Linguosity_Linguosity_src_app_api_batch_submit_route_ts__WEBPACK_IMPORTED_MODULE_0__.POST)\n/* harmony export */ });\n/* harmony import */ var _Users_brandonbrewer_Documents_Linguosity_Linguosity_src_app_api_batch_submit_route_ts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/app/api/batch/submit/route.ts */ \"(rsc)/./src/app/api/batch/submit/route.ts\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbmV4dEAxNS4yLjJfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wX3JlYWN0LWRvbUAxOC4zLjFfcmVhY3RAMTguMy4xX19yZWFjdEAxOC4zLjEvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1mbGlnaHQtYWN0aW9uLWVudHJ5LWxvYWRlci5qcz9hY3Rpb25zPSU1QiU1QiUyMiUyRlVzZXJzJTJGYnJhbmRvbmJyZXdlciUyRkRvY3VtZW50cyUyRkxpbmd1b3NpdHklMkZMaW5ndW9zaXR5JTJGc3JjJTJGYXBwJTJGYXBpJTJGYmF0Y2glMkZzdWJtaXQlMkZyb3V0ZS50cyUyMiUyQyU1QiU3QiUyMmlkJTIyJTNBJTIyNDBkOTdiNGY3ZDNiMzZjMWI1YWJiZjZiNWUyZWY3NTQyMDJlMmViMjc4JTIyJTJDJTIyZXhwb3J0ZWROYW1lJTIyJTNBJTIyUE9TVCUyMiU3RCU1RCU1RCU1RCZfX2NsaWVudF9pbXBvcnRlZF9fPSEiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQzZKIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiXG5leHBvcnQgeyBQT1NUIGFzIFwiNDBkOTdiNGY3ZDNiMzZjMWI1YWJiZjZiNWUyZWY3NTQyMDJlMmViMjc4XCIgfSBmcm9tIFwiL1VzZXJzL2JyYW5kb25icmV3ZXIvRG9jdW1lbnRzL0xpbmd1b3NpdHkvTGluZ3Vvc2l0eS9zcmMvYXBwL2FwaS9iYXRjaC9zdWJtaXQvcm91dGUudHNcIlxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/next@15.2.2_@opentelemetry+api@1.9.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-flight-action-entry-loader.js?actions=%5B%5B%22%2FUsers%2Fbrandonbrewer%2FDocuments%2FLinguosity%2FLinguosity%2Fsrc%2Fapp%2Fapi%2Fbatch%2Fsubmit%2Froute.ts%22%2C%5B%7B%22id%22%3A%2240d97b4f7d3b36c1b5abbf6b5e2ef754202e2eb278%22%2C%22exportedName%22%3A%22POST%22%7D%5D%5D%5D&__client_imported__=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/next@15.2.2_@opentelemetry+api@1.9.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!**********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/next@15.2.2_@opentelemetry+api@1.9.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \**********************************************************************************************************************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/batch/submit/route.ts":
/*!*******************************************!*\
  !*** ./src/app/api/batch/submit/route.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! private-next-rsc-server-reference */ \"(rsc)/./node_modules/.pnpm/next@15.2.2_@opentelemetry+api@1.9.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-flight-loader/server-reference.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! private-next-rsc-action-encryption */ \"(rsc)/./node_modules/.pnpm/next@15.2.2_@opentelemetry+api@1.9.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/server/app-render/encryption.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/.pnpm/next@15.2.2_@opentelemetry+api@1.9.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/api/server.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/.pnpm/uuid@11.1.0/node_modules/uuid/dist/esm/v4.js\");\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/headers */ \"(rsc)/./node_modules/.pnpm/next@15.2.2_@opentelemetry+api@1.9.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/api/headers.js\");\n/* harmony import */ var _lib_supabase_server__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/supabase/server */ \"(rsc)/./src/lib/supabase/server.ts\");\n/* harmony import */ var _lib_reportUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/lib/reportUtils */ \"(rsc)/./src/lib/reportUtils.ts\");\n/* harmony import */ var _lib_batchApiHelper__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/lib/batchApiHelper */ \"(rsc)/./src/lib/batchApiHelper.ts\");\n/* harmony import */ var private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! private-next-rsc-action-validate */ \"(rsc)/./node_modules/.pnpm/next@15.2.2_@opentelemetry+api@1.9.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-validate.js\");\n// src/app/api/batch/submit/route.ts\n// NOTE: Renaming this route might be clearer, e.g., /api/process-report-section\n/* __next_internal_action_entry_do_not_use__ {\"40d97b4f7d3b36c1b5abbf6b5e2ef754202e2eb278\":\"POST\"} */ \n\n\n\n\n // Your server client factory\n// --- Removed S3 imports and client ---\n// import { S3Client, PutObjectCommand } from '@aws-sdk/client-s3';\n// const s3 = new S3Client(...);\n// --- Removed S3 upload function ---\n// async function uploadToS3(...) { ... }\n// --- Removed Batch API helpers (unless needed elsewhere) ---\n// import { generateMCPInstructions, createBatchInputJsonl, getFullSchemaOutline } from '@/lib/batchApiHelper';\n// --- Removed Batch job submission function ---\n// async function submitBatchJob(...) { ... }\n// --- Import helpers needed for Claude call ---\n // Keep if used for text\n // Keep if these generate prompts\n/**\n * Call Claude's synchronous Messages API\n */ async function callClaudeMessagesApi(systemPrompt, userContent) {\n    const apiKey = process.env.ANTHROPIC_API_KEY;\n    const model = process.env.ANTHROPIC_MODEL || 'claude-3-opus-20240229'; // Or your preferred model\n    const maxTokens = 4096; // Adjust as needed\n    if (!apiKey) {\n        throw new Error('ANTHROPIC_API_KEY environment variable is not set');\n    }\n    console.log('[Claude Call] Sending request...');\n    try {\n        const response = await fetch('https://api.anthropic.com/v1/messages', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'anthropic-version': '2023-06-01',\n                'x-api-key': apiKey\n            },\n            body: JSON.stringify({\n                model: model,\n                max_tokens: maxTokens,\n                system: systemPrompt,\n                messages: [\n                    {\n                        role: 'user',\n                        content: userContent // Just the user's input text\n                    }\n                ]\n            })\n        });\n        if (!response.ok) {\n            const errorData = await response.text(); // Get text for more details\n            console.error('[Claude Call] API Error Response Body:', errorData);\n            throw new Error(`Claude API request failed: ${response.status} ${response.statusText}.`);\n        }\n        const result = await response.json();\n        console.log('[Claude Call] Received response.');\n        // --- IMPORTANT: Extract the actual JSON content ---\n        // This depends heavily on Claude's response structure for your prompt.\n        // Assuming the main content is in result.content[0].text and is valid JSON string\n        if (result.content && result.content[0] && result.content[0].type === 'text') {\n            try {\n                // Attempt to parse the text content as JSON\n                const jsonResult = JSON.parse(result.content[0].text);\n                return jsonResult;\n            } catch (parseError) {\n                console.error(\"[Claude Call] Failed to parse Claude's text response as JSON:\", parseError);\n                console.error(\"[Claude Call] Raw text response:\", result.content[0].text);\n                throw new Error(\"Claude did not return valid JSON content.\");\n            }\n        } else {\n            console.error(\"[Claude Call] Unexpected response structure:\", result);\n            throw new Error(\"Received unexpected response structure from Claude.\");\n        }\n    } catch (error) {\n        console.error('[Claude Call] Error calling Claude Messages API:', error);\n        throw error; // Re-throw to be caught by the main handler\n    }\n}\n/**\n * API route handler for SYNCHRONOUS report processing\n */ async function /*#__TURBOPACK_DISABLE_EXPORT_MERGING__*/ POST(request) {\n    const requestId = (0,uuid__WEBPACK_IMPORTED_MODULE_7__[\"default\"])();\n    console.log(`[${requestId}] SYNC report processing request received`);\n    // --- Authentication (same as before) ---\n    const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_3__.cookies)();\n    const supabase = await (0,_lib_supabase_server__WEBPACK_IMPORTED_MODULE_4__.createClient)(cookieStore);\n    if (!supabase) return next_server__WEBPACK_IMPORTED_MODULE_2__.NextResponse.json({\n        error: 'Server error: Supabase client failed'\n    }, {\n        status: 500\n    });\n    const { data: { user }, error: authError } = await supabase.auth.getUser();\n    if (authError || !user) {\n        console.error(`[${requestId}] API Route: Unauthorized access attempt`);\n        return next_server__WEBPACK_IMPORTED_MODULE_2__.NextResponse.json({\n            error: 'Unauthorized'\n        }, {\n            status: 401\n        });\n    }\n    const userId = user.id;\n    console.log(`[${requestId}] Authenticated user: ${userId}`);\n    // --- End Authentication ---\n    try {\n        const { input, pdfData, reportId } = await request.json();\n        const isPdfUpload = !!pdfData;\n        // --- STOP if it's a PDF upload for now ---\n        if (isPdfUpload) {\n            console.warn(`[${requestId}] PDF upload received, but synchronous processing is not recommended. Aborting.`);\n            return next_server__WEBPACK_IMPORTED_MODULE_2__.NextResponse.json({\n                error: 'PDF processing should use an asynchronous method (e.g., via Supabase Storage triggers). Direct synchronous processing not supported here.'\n            }, {\n                status: 400\n            });\n        }\n        // --- End PDF Check ---\n        // Proceed only with text input\n        if (!input) {\n            return next_server__WEBPACK_IMPORTED_MODULE_2__.NextResponse.json({\n                error: 'Missing text input'\n            }, {\n                status: 400\n            });\n        }\n        // If reportId is provided, verify ownership (same as before)\n        let currentReportData = {}; // To hold existing data if updating\n        if (reportId && reportId !== 'new') {\n            const { data: reportCheckData, error: reportError } = await supabase.from('reports').select('id, report_data') // Select existing data if needed for merge\n            .eq('id', reportId).eq('user_id', userId).single();\n            if (reportError || !reportCheckData) {\n                console.error(`[${requestId}] User ${userId} attempted to access unauthorized report ${reportId}`);\n                return next_server__WEBPACK_IMPORTED_MODULE_2__.NextResponse.json({\n                    error: 'Report not found or access denied'\n                }, {\n                    status: 403\n                });\n            }\n            currentReportData = reportCheckData.report_data || {}; // Get existing JSONB data\n            console.log(`[${requestId}] Verified ownership of report ${reportId} for user ${userId}`);\n        } else {\n            console.log(`[${requestId}] Processing for a new report or without specific report ID context.`);\n            // Handle how to create a new report ID if necessary, maybe requires client to create first?\n            // For now, assume reportId must exist for updates via this endpoint.\n            if (!reportId || reportId === 'new') {\n                return next_server__WEBPACK_IMPORTED_MODULE_2__.NextResponse.json({\n                    error: 'A valid report ID is required for updates.'\n                }, {\n                    status: 400\n                });\n            }\n        }\n        // --- Prepare for Claude Call (using your existing helpers) ---\n        const normalizedInput = await (0,_lib_reportUtils__WEBPACK_IMPORTED_MODULE_5__.normalizeInput)(input); // Assuming this works for text\n        const FULL_SCHEMA_OUTLINE = (0,_lib_batchApiHelper__WEBPACK_IMPORTED_MODULE_6__.getFullSchemaOutline)();\n        const systemPrompt = (0,_lib_batchApiHelper__WEBPACK_IMPORTED_MODULE_6__.generateMCPInstructions)(FULL_SCHEMA_OUTLINE); // Use as System Prompt\n        const userContent = `<UserInputText>\\n${normalizedInput}\\n</UserInputText>`; // Just the user input\n        // --- Call Claude Synchronously ---\n        const claudeResultJson = await callClaudeMessagesApi(systemPrompt, userContent);\n        console.log(`[${requestId}] Claude processing successful.`);\n        // --- Merge results (optional, simple overwrite shown) ---\n        // You might want more sophisticated merging logic here depending on how Claude returns data\n        const updatedReportData = {\n            ...currentReportData,\n            ...claudeResultJson // Overwrite/add fields from Claude's response\n        };\n        // --- Update Supabase Report Table ---\n        console.log(`[${requestId}] Updating report ${reportId} in Supabase...`);\n        const { data: updateData, error: updateError } = await supabase.from('reports').update({\n            report_data: updatedReportData\n        }) // Save to 'report_data' jsonb column\n        .eq('id', reportId).eq('user_id', userId).select() // Optionally select the updated row to return\n        .single(); // Assuming update affects one row\n        if (updateError) {\n            console.error(`[${requestId}] Supabase update error:`, updateError);\n            throw new Error(`Failed to save report update: ${updateError.message}`);\n        }\n        console.log(`[${requestId}] Supabase update successful for report ${reportId}`);\n        // --- End Supabase Update ---\n        // --- Remove Batch Job Tracking ---\n        // No need to insert into 'batch_jobs' table\n        // --- Return Success Response ---\n        return next_server__WEBPACK_IMPORTED_MODULE_2__.NextResponse.json({\n            requestId,\n            status: 'completed',\n            message: 'Report section processed and saved successfully.'\n        });\n    } catch (error) {\n        console.error(`[${requestId}] Error in synchronous processing:`, error);\n        return next_server__WEBPACK_IMPORTED_MODULE_2__.NextResponse.json({\n            error: error instanceof Error ? error.message : 'An unknown error occurred',\n            status: 'error'\n        }, {\n            status: 500\n        });\n    }\n}\n\n(0,private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_8__.ensureServerEntryExports)([\n    POST\n]);\n(0,private_next_rsc_server_reference__WEBPACK_IMPORTED_MODULE_0__.registerServerReference)(POST, \"40d97b4f7d3b36c1b5abbf6b5e2ef754202e2eb278\", null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/batch/submit/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/batchApiHelper.ts":
/*!***********************************!*\
  !*** ./src/lib/batchApiHelper.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createBatchInputJsonl: () => (/* binding */ createBatchInputJsonl),\n/* harmony export */   generateMCPInstructions: () => (/* binding */ generateMCPInstructions),\n/* harmony export */   getFullSchemaOutline: () => (/* binding */ getFullSchemaOutline)\n/* harmony export */ });\n/**\n * Helper functions for working with the Claude Batch API\n */ /**\n * Generates the MCP instruction block for Claude\n * @param schemaOutline - String representation of the target JSON structure\n * @returns A multi-line string containing MCP tags with instructions\n */ function generateMCPInstructions(schemaOutline) {\n    return `<Instructions>\nYou are an expert speech-language pathologist's assistant. Your task is to analyze the accompanying user input (which might be text in a <UserInputText> tag OR a provided document) and populate the corresponding fields in the <JSONSchema>.\n- Adhere STRICTLY to the schema structure and data types (string, boolean, [\"string\"] for arrays).\n- Only include information explicitly found or reasonably inferred from the user input. Do NOT add information not present.\n- For array fields like 'strengths' or 'needs', extract distinct points and format them as a valid JSON array of strings. Ensure each string in the array is properly escaped if necessary.\n- If information for optional fields isn't found, omit them or use appropriate null/empty values based on the schema.\n- Ensure the entire output is a single, valid JSON object conforming to the schema.\n</Instructions>\n\n<JSONSchema>\n${schemaOutline}\n</JSONSchema>\n\n<OutputFormat>\nReturn ONLY the single, valid JSON object representing the populated report based on the schema. Start with { and end with }. Do not include any other text, greetings, or explanations outside the JSON structure.\n</OutputFormat>`;\n}\n/**\n * Creates a JSON Lines (.jsonl) string for batch API submission\n * @param requests - Array of objects with customId and messages array\n * @returns A string formatted as JSON Lines (.jsonl)\n */ function createBatchInputJsonl(requests) {\n    return requests.map((request)=>{\n        const jsonLineObject = {\n            \"custom_id\": request.customId,\n            \"method\": \"POST\",\n            \"url\": \"/v1/messages\",\n            \"body\": {\n                \"model\": \"claude-3-7-sonnet-20250219\",\n                \"messages\": request.messages,\n                \"max_tokens\": 4000\n            }\n        };\n        return JSON.stringify(jsonLineObject);\n    }).join('\\n');\n}\n/**\n * Builds the full JSON schema outline for the report structure\n * @returns A string representing the JSON schema structure\n */ function getFullSchemaOutline() {\n    return `{\n  \"header\": {\n    \"studentInformation\": {\n      \"firstName\": \"string\",\n      \"lastName\": \"string\",\n      \"DOB\": \"string\",\n      \"reportDate\": \"string\",\n      \"evaluationDate\": \"string\",\n      \"parents\": [\"string\"],\n      \"homeLanguage\": \"string\",\n      \"grade\": \"string\",\n      \"eligibility\": \"string\",\n      \"secondaryEligibility\": \"string\",\n      \"school\": \"string\",\n      \"teacher\": \"string\",\n      \"evaluator\": \"string\",\n      \"caseManager\": \"string\"\n    },\n    \"reasonForReferral\": \"string\",\n    \"confidentialityStatement\": \"string\"\n  },\n  \"background\": {\n    \"studentDemographicsAndBackground\": {\n      \"educationalHistory\": \"string\"\n    },\n    \"healthReport\": {\n      \"medicalHistory\": \"string\",\n      \"visionAndHearingScreening\": \"string\",\n      \"medicationsAndAllergies\": \"string\"\n    },\n    \"earlyInterventionHistory\": \"string\",\n    \"familyHistory\": {\n      \"familyStructure\": \"string\",\n      \"languageAndCulturalBackground\": \"string\",\n      \"socioeconomicFactors\": \"string\"\n    },\n    \"parentGuardianConcerns\": \"string\"\n  },\n  \"assessmentResults\": {\n    \"observations\": {\n      \"classroomObservations\": \"string\",\n      \"playBasedInformalObservations\": \"string\",\n      \"socialInteractionObservations\": \"string\"\n    },\n    \"assessmentProceduresAndTools\": {\n      \"overviewOfAssessmentMethods\": \"string\",\n      \"assessmentIntegrityStatement\": \"string\",\n      \"assessmentToolsUsed\": [\"string\"]\n    },\n    \"domains\": {\n      \"receptive\": {\n        \"isConcern\": \"boolean\",\n        \"topicSentence\": \"string\",\n        \"strengths\": [\"string\"],\n        \"needs\": [\"string\"],\n        \"impactStatement\": \"string\"\n      },\n      \"expressive\": {\n        \"isConcern\": \"boolean\",\n        \"topicSentence\": \"string\",\n        \"strengths\": [\"string\"],\n        \"needs\": [\"string\"],\n        \"impactStatement\": \"string\"\n      },\n      \"pragmatic\": {\n        \"isConcern\": \"boolean\",\n        \"topicSentence\": \"string\",\n        \"strengths\": [\"string\"],\n        \"needs\": [\"string\"],\n        \"impactStatement\": \"string\"\n      },\n      \"articulation\": {\n        \"isConcern\": \"boolean\",\n        \"topicSentence\": \"string\",\n        \"strengths\": [\"string\"],\n        \"needs\": [\"string\"],\n        \"impactStatement\": \"string\"\n      },\n      \"voice\": {\n        \"isConcern\": \"boolean\",\n        \"topicSentence\": \"string\",\n        \"strengths\": [\"string\"],\n        \"needs\": [\"string\"],\n        \"impactStatement\": \"string\"\n      },\n      \"fluency\": {\n        \"isConcern\": \"boolean\",\n        \"topicSentence\": \"string\",\n        \"strengths\": [\"string\"],\n        \"needs\": [\"string\"],\n        \"impactStatement\": \"string\"\n      }\n    }\n  },\n  \"conclusion\": {\n    \"eligibility\": {\n      \"domains\": {\n        \"language\": \"boolean\",\n        \"articulation\": \"boolean\",\n        \"voice\": \"boolean\",\n        \"fluency\": \"boolean\"\n      },\n      \"eligibilityState\": \"string\",\n      \"eligibilityStatement\": \"string\",\n      \"isPreschool\": \"boolean\"\n    },\n    \"conclusion\": {\n      \"summary\": \"string\"\n    },\n    \"recommendations\": {\n      \"services\": {\n        \"typeOfService\": \"string\",\n        \"frequency\": \"string\",\n        \"setting\": \"string\"\n      },\n      \"accommodations\": [\"string\"],\n      \"facilitationStrategies\": [\"string\"]\n    },\n    \"parentFriendlyGlossary\": {\n      \"terms\": {\n        \"key1\": \"string\",\n        \"key2\": \"string\"\n      }\n    }\n  }\n}`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/batchApiHelper.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/reportUtils.ts":
/*!********************************!*\
  !*** ./src/lib/reportUtils.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createReportSkeleton: () => (/* binding */ createReportSkeleton),\n/* harmony export */   createValidatedReport: () => (/* binding */ createValidatedReport),\n/* harmony export */   deepMerge: () => (/* binding */ deepMerge),\n/* harmony export */   normalizeInput: () => (/* binding */ normalizeInput),\n/* harmony export */   safeCloneReport: () => (/* binding */ safeCloneReport),\n/* harmony export */   updateDomainSection: () => (/* binding */ updateDomainSection),\n/* harmony export */   updateDomainSectionLegacy: () => (/* binding */ updateDomainSectionLegacy),\n/* harmony export */   validateReportShape: () => (/* binding */ validateReportShape)\n/* harmony export */ });\n/**\n * Normalize input data from various sources (text, PDF, audio)\n * @param input - Input data in various formats\n */ async function normalizeInput(input) {\n    // Handle different input formats\n    if (typeof input === 'string') {\n        return input;\n    } else if (input.text) {\n        return input.text;\n    } else if (input.pdfData) {\n        // Return the base64 PDF data - Claude will process it with its document capability\n        return input.pdfData;\n    }\n    return JSON.stringify(input);\n}\n/**\n * Create a default report skeleton that adheres to the SpeechLanguageReport schema\n * This function creates a fully compliant report with all required fields and default values\n */ function createReportSkeleton() {\n    return {\n        header: {\n            studentInformation: {\n                firstName: \"\",\n                lastName: \"\",\n                DOB: \"\",\n                reportDate: \"\",\n                evaluationDate: \"\",\n                parents: [],\n                homeLanguage: \"English\",\n                grade: \"\",\n                eligibility: \"\",\n                secondaryEligibility: \"\",\n                school: \"\",\n                teacher: \"\",\n                evaluator: \"\",\n                caseManager: \"\"\n            },\n            reasonForReferral: \"\",\n            confidentialityStatement: \"\",\n            synthesis: \"\",\n            isLocked: false,\n            lockStatus: {},\n            markedDoneStatus: {}\n        },\n        background: {\n            studentDemographicsAndBackground: {\n                educationalHistory: \"\",\n                synthesis: \"\",\n                isLocked: false\n            },\n            healthReport: {\n                medicalHistory: \"\",\n                visionAndHearingScreening: \"\",\n                medicationsAndAllergies: \"\",\n                synthesis: \"\",\n                isLocked: false\n            },\n            earlyInterventionHistory: \"\",\n            familyHistory: {\n                familyStructure: \"\",\n                languageAndCulturalBackground: \"\",\n                socioeconomicFactors: \"\",\n                synthesis: \"\",\n                isLocked: false\n            },\n            parentGuardianConcerns: \"\",\n            synthesis: \"\",\n            isLocked: false,\n            lockStatus: {},\n            markedDoneStatus: {}\n        },\n        // Moving domain data from assessmentResults to presentLevels\n        presentLevels: {\n            functioning: {\n                receptive: {\n                    isConcern: false,\n                    topicSentence: \"\",\n                    strengths: [],\n                    needs: [],\n                    impactStatement: \"\",\n                    assessmentTools: [],\n                    synthesis: \"\",\n                    isLocked: false\n                },\n                expressive: {\n                    isConcern: false,\n                    topicSentence: \"\",\n                    strengths: [],\n                    needs: [],\n                    impactStatement: \"\",\n                    assessmentTools: [],\n                    synthesis: \"\",\n                    isLocked: false\n                },\n                pragmatic: {\n                    isConcern: false,\n                    topicSentence: \"\",\n                    strengths: [],\n                    needs: [],\n                    impactStatement: \"\",\n                    assessmentTools: [],\n                    synthesis: \"\",\n                    isLocked: false\n                },\n                articulation: {\n                    isConcern: false,\n                    topicSentence: \"\",\n                    strengths: [],\n                    needs: [],\n                    impactStatement: \"\",\n                    assessmentTools: [],\n                    synthesis: \"\",\n                    isLocked: false\n                },\n                voice: {\n                    isConcern: false,\n                    topicSentence: \"\",\n                    strengths: [],\n                    needs: [],\n                    impactStatement: \"\",\n                    assessmentTools: [],\n                    synthesis: \"\",\n                    isLocked: false\n                },\n                fluency: {\n                    isConcern: false,\n                    topicSentence: \"\",\n                    strengths: [],\n                    needs: [],\n                    impactStatement: \"\",\n                    assessmentTools: [],\n                    synthesis: \"\",\n                    isLocked: false\n                }\n            },\n            synthesis: \"\",\n            isLocked: false,\n            lockStatus: {},\n            markedDoneStatus: {\n                functioning: {}\n            }\n        },\n        assessmentResults: {\n            observations: {\n                classroomObservations: \"\",\n                playBasedInformalObservations: \"\",\n                socialInteractionObservations: \"\",\n                synthesis: \"\",\n                isLocked: false,\n                lockStatus: {}\n            },\n            assessmentProceduresAndTools: {\n                overviewOfAssessmentMethods: \"\",\n                assessmentIntegrityStatement: \"\",\n                assessmentToolsUsed: [],\n                synthesis: \"\",\n                isLocked: false,\n                lockStatus: {}\n            },\n            synthesis: \"\",\n            isLocked: false,\n            lockStatus: {},\n            markedDoneStatus: {}\n        },\n        conclusion: {\n            eligibility: {\n                domains: {\n                    receptive: false,\n                    expressive: false,\n                    pragmatic: false,\n                    articulation: false,\n                    voice: false,\n                    fluency: false\n                },\n                eligibilityState: \"CA\",\n                eligibilityStatement: \"\",\n                applicableEdCodeText: \"\",\n                isPreschool: false,\n                synthesis: \"\",\n                isLocked: false,\n                lockStatus: {}\n            },\n            conclusion: {\n                summary: \"\",\n                synthesis: \"\",\n                isLocked: false\n            },\n            recommendations: {\n                services: {\n                    typeOfService: \"\",\n                    frequency: \"\",\n                    setting: \"\"\n                },\n                accommodations: [],\n                facilitationStrategies: [],\n                synthesis: \"\",\n                isLocked: false\n            },\n            parentFriendlyGlossary: {\n                terms: {},\n                isLocked: false\n            },\n            synthesis: \"\",\n            isLocked: false,\n            lockStatus: {},\n            markedDoneStatus: {}\n        },\n        metadata: {\n            lastUpdated: new Date().toISOString(),\n            version: 1\n        },\n        synthesis: \"\"\n    };\n}\n/**\n * Create a validated report that ensures all required fields are present\n * and defaults are applied according to the schema\n */ function createValidatedReport() {\n    try {\n        // Import the schema to validate\n        const { SpeechLanguageReportSchema } = __webpack_require__(/*! @/types/reportSchemas */ \"(rsc)/./src/types/reportSchemas.ts\");\n        // Create a skeleton report\n        const skeleton = createReportSkeleton();\n        // Validate and parse using Zod schema (applies defaults)\n        const validatedReport = SpeechLanguageReportSchema.parse(skeleton);\n        return validatedReport;\n    } catch (error) {\n        console.error(\"Failed to validate report schema:\", error);\n        // Fallback to skeleton if schema validation fails\n        return createReportSkeleton();\n    }\n}\n/**\n * Utility function to validate any report against the schema\n * Returns the validated report with defaults applied, or null if invalid\n */ function validateReportShape(report) {\n    try {\n        if (!report) return null;\n        // Import the schema to validate\n        const { SpeechLanguageReportSchema } = __webpack_require__(/*! @/types/reportSchemas */ \"(rsc)/./src/types/reportSchemas.ts\");\n        // Validate using Zod schema\n        const validatedReport = SpeechLanguageReportSchema.parse(report);\n        return validatedReport;\n    } catch (error) {\n        console.error(\"Invalid report structure:\", error);\n        return null;\n    }\n}\n/**\n * Safe deep clone utility that preserves the proper report structure\n * This is a safer alternative to JSON.parse(JSON.stringify())\n */ function safeCloneReport(report) {\n    if (!report) return createReportSkeleton();\n    try {\n        // Option 1: Use structuredClone if available (modern browsers)\n        if (typeof structuredClone === 'function') {\n            return structuredClone(report);\n        }\n        // Option 2: Use Zod to validate and parse (applies defaults to missing fields)\n        const { SpeechLanguageReportSchema } = __webpack_require__(/*! @/types/reportSchemas */ \"(rsc)/./src/types/reportSchemas.ts\");\n        return SpeechLanguageReportSchema.parse(report);\n    } catch (error) {\n        // Fallback to careful JSON methods if other approaches fail\n        console.warn(\"Using JSON for cloning due to error:\", error);\n        return JSON.parse(JSON.stringify(report));\n    }\n}\n/**\n * Deep merge utility function for properly merging nested objects and arrays\n */ function deepMerge(target, source) {\n    // Handle edge cases\n    if (!source || typeof source !== 'object') return source;\n    if (!target || typeof target !== 'object') return {\n        ...source\n    };\n    // Create a new object to avoid mutating the original\n    const result = {\n        ...target\n    };\n    Object.keys(source).forEach((key)=>{\n        const targetValue = result[key];\n        const sourceValue = source[key];\n        // Handle arrays - prefer source arrays over target arrays\n        if (Array.isArray(sourceValue)) {\n            result[key] = [\n                ...sourceValue\n            ]; // Create a new array to prevent reference issues\n        } else if (typeof sourceValue === 'object' && sourceValue !== null && typeof targetValue === 'object' && targetValue !== null && !Array.isArray(targetValue)) {\n            result[key] = deepMerge(targetValue, sourceValue);\n        } else {\n            result[key] = sourceValue;\n        }\n    });\n    return result;\n}\n/**\n * Update a specific domain section with new data\n * Updated to use presentLevels.functioning structure per schema\n */ function updateDomainSection(report, domain, updates) {\n    // Use safe clone instead of spread operator\n    const updatedReport = safeCloneReport(report);\n    // Ensure the path exists\n    if (!updatedReport.presentLevels) {\n        updatedReport.presentLevels = {\n            functioning: {},\n            isLocked: false,\n            lockStatus: {},\n            markedDoneStatus: {\n                functioning: {}\n            }\n        };\n    }\n    if (!updatedReport.presentLevels.functioning) {\n        updatedReport.presentLevels.functioning = {};\n    }\n    // Initialize domain if it doesn't exist\n    if (!updatedReport.presentLevels.functioning[domain]) {\n        updatedReport.presentLevels.functioning[domain] = {\n            isConcern: false,\n            topicSentence: '',\n            strengths: [],\n            needs: [],\n            impactStatement: '',\n            assessmentTools: [],\n            synthesis: '',\n            isLocked: false\n        };\n    }\n    // Update specific fields\n    const domainObj = updatedReport.presentLevels.functioning[domain];\n    if (updates.isConcern !== undefined) {\n        domainObj.isConcern = updates.isConcern;\n    }\n    if (updates.topicSentence) {\n        domainObj.topicSentence = updates.topicSentence;\n    }\n    if (updates.strengths && updates.strengths.length > 0) {\n        domainObj.strengths = [\n            ...domainObj.strengths || [],\n            ...updates.strengths\n        ];\n    }\n    if (updates.needs && updates.needs.length > 0) {\n        domainObj.needs = [\n            ...domainObj.needs || [],\n            ...updates.needs\n        ];\n    }\n    if (updates.impactStatement) {\n        domainObj.impactStatement = updates.impactStatement;\n    }\n    if (updates.assessmentTools && updates.assessmentTools.length > 0) {\n        domainObj.assessmentTools = [\n            ...domainObj.assessmentTools || [],\n            ...updates.assessmentTools\n        ];\n    }\n    // Also update the eligibility status if this is an area of concern\n    if (updates.isConcern !== undefined) {\n        // Ensure the eligibility path exists\n        if (!updatedReport.conclusion) {\n            updatedReport.conclusion = {\n                eligibility: {\n                    domains: {},\n                    eligibilityState: \"CA\",\n                    isLocked: false\n                },\n                isLocked: false\n            };\n        }\n        if (!updatedReport.conclusion.eligibility) {\n            updatedReport.conclusion.eligibility = {\n                domains: {},\n                eligibilityState: \"CA\",\n                isLocked: false\n            };\n        }\n        if (!updatedReport.conclusion.eligibility.domains) {\n            updatedReport.conclusion.eligibility.domains = {};\n        }\n        updatedReport.conclusion.eligibility.domains[domain] = updates.isConcern;\n    }\n    // Update metadata\n    if (!updatedReport.metadata) {\n        updatedReport.metadata = {\n            version: 1,\n            lastUpdated: new Date().toISOString()\n        };\n    } else {\n        updatedReport.metadata.lastUpdated = new Date().toISOString();\n        updatedReport.metadata.version = (updatedReport.metadata.version || 0) + 1;\n    }\n    return updatedReport;\n}\n/**\n * DEPRECATED: This function uses the old structure (assessmentResults.domains)\n * Use updateDomainSection instead which uses presentLevels.functioning\n * This is kept for backward compatibility during migration\n */ function updateDomainSectionLegacy(report, domain, updates) {\n    console.warn(\"DEPRECATED: Using legacy domain structure. Update to use presentLevels.functioning\");\n    // Helper function to ensure report has the legacy structure\n    const ensureLegacyStructure = (report)=>{\n        const updatedReport = {\n            ...report\n        };\n        if (!updatedReport.assessmentResults) {\n            updatedReport.assessmentResults = {\n                domains: {},\n                observations: {},\n                assessmentProceduresAndTools: {\n                    assessmentToolsUsed: []\n                }\n            };\n        }\n        if (!updatedReport.assessmentResults.domains) {\n            updatedReport.assessmentResults.domains = {};\n        }\n        return updatedReport;\n    };\n    const updatedReport = ensureLegacyStructure(report);\n    // Initialize domain if it doesn't exist\n    if (!updatedReport.assessmentResults.domains[domain]) {\n        updatedReport.assessmentResults.domains[domain] = {\n            isConcern: false,\n            topicSentence: '',\n            strengths: [],\n            needs: [],\n            impactStatement: ''\n        };\n    }\n    // Update specific fields\n    if (updates.isConcern !== undefined) {\n        updatedReport.assessmentResults.domains[domain].isConcern = updates.isConcern;\n    }\n    if (updates.topicSentence) {\n        updatedReport.assessmentResults.domains[domain].topicSentence = updates.topicSentence;\n    }\n    if (updates.strengths && updates.strengths.length > 0) {\n        updatedReport.assessmentResults.domains[domain].strengths = [\n            ...updatedReport.assessmentResults.domains[domain].strengths || [],\n            ...updates.strengths\n        ];\n    }\n    if (updates.needs && updates.needs.length > 0) {\n        updatedReport.assessmentResults.domains[domain].needs = [\n            ...updatedReport.assessmentResults.domains[domain].needs || [],\n            ...updates.needs\n        ];\n    }\n    if (updates.impactStatement) {\n        updatedReport.assessmentResults.domains[domain].impactStatement = updates.impactStatement;\n    }\n    // Also update the eligibility status if this is an area of concern\n    if (updates.isConcern !== undefined) {\n        if (!updatedReport.conclusion) updatedReport.conclusion = {\n            eligibility: {\n                domains: {}\n            }\n        };\n        if (!updatedReport.conclusion.eligibility) updatedReport.conclusion.eligibility = {\n            domains: {}\n        };\n        if (!updatedReport.conclusion.eligibility.domains) updatedReport.conclusion.eligibility.domains = {};\n        updatedReport.conclusion.eligibility.domains[domain] = updates.isConcern;\n    }\n    // Update metadata\n    if (!updatedReport.metadata) updatedReport.metadata = {\n        version: 1,\n        lastUpdated: new Date().toISOString()\n    };\n    updatedReport.metadata.lastUpdated = new Date().toISOString();\n    updatedReport.metadata.version = (updatedReport.metadata.version || 0) + 1;\n    return updatedReport;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/reportUtils.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/supabase/server.ts":
/*!************************************!*\
  !*** ./src/lib/supabase/server.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createClient: () => (/* binding */ createClient)\n/* harmony export */ });\n/* harmony import */ var _supabase_ssr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/ssr */ \"(rsc)/./node_modules/.pnpm/@supabase+ssr@0.6.1_@supabase+supabase-js@2.49.4/node_modules/@supabase/ssr/dist/module/index.js\");\n\nasync function createClient(cookieStore) {\n    return (0,_supabase_ssr__WEBPACK_IMPORTED_MODULE_0__.createServerClient)(\"https://pvozqngxirrnrylefpmq.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InB2b3pxbmd4aXJybnJ5bGVmcG1xIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDM3NDUxMDgsImV4cCI6MjA1OTMyMTEwOH0.cqxg_8C2kvToSxPRuxmJBLAv2L4QGiNsQeYLAo0nq4w\", {\n        cookies: {\n            async get (name) {\n                const cookie = await cookieStore.get(name);\n                return cookie?.value;\n            },\n            async set (name, value, options) {\n                try {\n                    cookieStore.set({\n                        name,\n                        value,\n                        ...options\n                    });\n                } catch (error) {\n                    // In production, setting cookies in middleware or server actions may throw\n                    // This is a known issue: https://github.com/vercel/next.js/issues/49259\n                    console.warn('Error setting cookie', error);\n                }\n            },\n            async remove (name, options) {\n                try {\n                    cookieStore.set({\n                        name,\n                        value: '',\n                        ...options\n                    });\n                } catch (error) {\n                    console.warn('Error removing cookie', error);\n                }\n            }\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3N1cGFiYXNlL3NlcnZlci50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUFtRDtBQUs1QyxlQUFlQyxhQUFhQyxXQUFtQztJQUNwRSxPQUFPRixpRUFBa0JBLENBQ3ZCRywwQ0FBb0MsRUFDcENBLGtOQUF5QyxFQUN6QztRQUNFSSxTQUFTO1lBQ1AsTUFBTUMsS0FBSUMsSUFBWTtnQkFDcEIsTUFBTUMsU0FBUyxNQUFNUixZQUFZTSxHQUFHLENBQUNDO2dCQUNyQyxPQUFPQyxRQUFRQztZQUNqQjtZQUNBLE1BQU1DLEtBQUlILElBQVksRUFBRUUsS0FBYSxFQUFFRSxPQUFZO2dCQUNqRCxJQUFJO29CQUNGWCxZQUFZVSxHQUFHLENBQUM7d0JBQUVIO3dCQUFNRTt3QkFBTyxHQUFHRSxPQUFPO29CQUFDO2dCQUM1QyxFQUFFLE9BQU9DLE9BQU87b0JBQ2QsMkVBQTJFO29CQUMzRSx3RUFBd0U7b0JBQ3hFQyxRQUFRQyxJQUFJLENBQUMsd0JBQXdCRjtnQkFDdkM7WUFDRjtZQUNBLE1BQU1HLFFBQU9SLElBQVksRUFBRUksT0FBWTtnQkFDckMsSUFBSTtvQkFDRlgsWUFBWVUsR0FBRyxDQUFDO3dCQUFFSDt3QkFBTUUsT0FBTzt3QkFBSSxHQUFHRSxPQUFPO29CQUFDO2dCQUNoRCxFQUFFLE9BQU9DLE9BQU87b0JBQ2RDLFFBQVFDLElBQUksQ0FBQyx5QkFBeUJGO2dCQUN4QztZQUNGO1FBQ0Y7SUFDRjtBQUVKIiwic291cmNlcyI6WyIvVXNlcnMvYnJhbmRvbmJyZXdlci9Eb2N1bWVudHMvTGluZ3Vvc2l0eS9MaW5ndW9zaXR5L3NyYy9saWIvc3VwYWJhc2Uvc2VydmVyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZVNlcnZlckNsaWVudCB9IGZyb20gJ0BzdXBhYmFzZS9zc3InO1xuaW1wb3J0IHsgY29va2llcyB9IGZyb20gJ25leHQvaGVhZGVycyc7XG5pbXBvcnQgeyBSZWFkb25seVJlcXVlc3RDb29raWVzIH0gZnJvbSAnbmV4dC9kaXN0L3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vYWRhcHRlcnMvcmVxdWVzdC1jb29raWVzJztcbmltcG9ydCB7IERhdGFiYXNlIH0gZnJvbSAnQC90eXBlcy9zdXBhYmFzZVR5cGVzJztcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNyZWF0ZUNsaWVudChjb29raWVTdG9yZTogUmVhZG9ubHlSZXF1ZXN0Q29va2llcykge1xuICByZXR1cm4gY3JlYXRlU2VydmVyQ2xpZW50PERhdGFiYXNlPihcbiAgICBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwhLFxuICAgIHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZISxcbiAgICB7XG4gICAgICBjb29raWVzOiB7XG4gICAgICAgIGFzeW5jIGdldChuYW1lOiBzdHJpbmcpIHtcbiAgICAgICAgICBjb25zdCBjb29raWUgPSBhd2FpdCBjb29raWVTdG9yZS5nZXQobmFtZSk7XG4gICAgICAgICAgcmV0dXJuIGNvb2tpZT8udmFsdWU7XG4gICAgICAgIH0sXG4gICAgICAgIGFzeW5jIHNldChuYW1lOiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcsIG9wdGlvbnM6IGFueSkge1xuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb29raWVTdG9yZS5zZXQoeyBuYW1lLCB2YWx1ZSwgLi4ub3B0aW9ucyB9KTtcbiAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgLy8gSW4gcHJvZHVjdGlvbiwgc2V0dGluZyBjb29raWVzIGluIG1pZGRsZXdhcmUgb3Igc2VydmVyIGFjdGlvbnMgbWF5IHRocm93XG4gICAgICAgICAgICAvLyBUaGlzIGlzIGEga25vd24gaXNzdWU6IGh0dHBzOi8vZ2l0aHViLmNvbS92ZXJjZWwvbmV4dC5qcy9pc3N1ZXMvNDkyNTlcbiAgICAgICAgICAgIGNvbnNvbGUud2FybignRXJyb3Igc2V0dGluZyBjb29raWUnLCBlcnJvcik7XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBhc3luYyByZW1vdmUobmFtZTogc3RyaW5nLCBvcHRpb25zOiBhbnkpIHtcbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29va2llU3RvcmUuc2V0KHsgbmFtZSwgdmFsdWU6ICcnLCAuLi5vcHRpb25zIH0pO1xuICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oJ0Vycm9yIHJlbW92aW5nIGNvb2tpZScsIGVycm9yKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgIH1cbiAgKTtcbn0iXSwibmFtZXMiOlsiY3JlYXRlU2VydmVyQ2xpZW50IiwiY3JlYXRlQ2xpZW50IiwiY29va2llU3RvcmUiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkiLCJjb29raWVzIiwiZ2V0IiwibmFtZSIsImNvb2tpZSIsInZhbHVlIiwic2V0Iiwib3B0aW9ucyIsImVycm9yIiwiY29uc29sZSIsIndhcm4iLCJyZW1vdmUiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/supabase/server.ts\n");

/***/ }),

/***/ "(rsc)/./src/types/reportSchemas.ts":
/*!************************************!*\
  !*** ./src/types/reportSchemas.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AssessmentObservationsSchema: () => (/* binding */ AssessmentObservationsSchema),\n/* harmony export */   AssessmentProceduresAndToolsSchema: () => (/* binding */ AssessmentProceduresAndToolsSchema),\n/* harmony export */   AssessmentResultsSchema: () => (/* binding */ AssessmentResultsSchema),\n/* harmony export */   AssessmentToolSchema: () => (/* binding */ AssessmentToolSchema),\n/* harmony export */   BackgroundSchema: () => (/* binding */ BackgroundSchema),\n/* harmony export */   ConclusionSchema: () => (/* binding */ ConclusionSchema),\n/* harmony export */   ConclusionSummarySchema: () => (/* binding */ ConclusionSummarySchema),\n/* harmony export */   EligibilityDeterminationSchema: () => (/* binding */ EligibilityDeterminationSchema),\n/* harmony export */   FunctioningSchema: () => (/* binding */ FunctioningSchema),\n/* harmony export */   FunctioningSectionSchema: () => (/* binding */ FunctioningSectionSchema),\n/* harmony export */   GlossarySchema: () => (/* binding */ GlossarySchema),\n/* harmony export */   HeaderSchema: () => (/* binding */ HeaderSchema),\n/* harmony export */   MetadataSchema: () => (/* binding */ MetadataSchema),\n/* harmony export */   PresentLevelsSchema: () => (/* binding */ PresentLevelsSchema),\n/* harmony export */   RecommendationsSchema: () => (/* binding */ RecommendationsSchema),\n/* harmony export */   ReferralSchema: () => (/* binding */ ReferralSchema),\n/* harmony export */   SpeechLanguageReportSchema: () => (/* binding */ SpeechLanguageReportSchema),\n/* harmony export */   StudentInformationSchema: () => (/* binding */ StudentInformationSchema)\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod */ \"(rsc)/./node_modules/.pnpm/zod@3.24.2/node_modules/zod/lib/index.mjs\");\n// FILE: src/types/reportSchemas.ts\n// (Updated with markedDoneStatus and AssessmentTool definition)\n\n/**\n * Basic student info captured at the beginning of the report\n */ const StudentInformationSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    firstName: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().min(1, \"First name is required\"),\n    lastName: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().min(1, \"Last name is required\"),\n    DOB: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    reportDate: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    evaluationDate: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    parents: zod__WEBPACK_IMPORTED_MODULE_0__.z.array(zod__WEBPACK_IMPORTED_MODULE_0__.z.string()).default([]),\n    homeLanguage: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().default(\"English\"),\n    grade: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    eligibility: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    secondaryEligibility: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    school: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    teacher: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    evaluator: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    caseManager: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional()\n});\n/**\n * Basic intake/referral reasoning\n */ const ReferralSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    reasonForReferral: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    confidentialityStatement: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional()\n});\n/**\n * Top-level header section\n */ const HeaderSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    studentInformation: StudentInformationSchema,\n    reasonForReferral: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    confidentialityStatement: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    synthesis: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    isLocked: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false),\n    lockStatus: zod__WEBPACK_IMPORTED_MODULE_0__.z.record(zod__WEBPACK_IMPORTED_MODULE_0__.z.string(), zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean()).optional(),\n    markedDoneStatus: zod__WEBPACK_IMPORTED_MODULE_0__.z.record(zod__WEBPACK_IMPORTED_MODULE_0__.z.string(), zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean()).optional()\n});\n/**\n * Section describing observed and assessed communication functioning (A single domain)\n */ const FunctioningSectionSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    isConcern: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false),\n    topicSentence: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    strengths: zod__WEBPACK_IMPORTED_MODULE_0__.z.array(zod__WEBPACK_IMPORTED_MODULE_0__.z.string()).default([]),\n    needs: zod__WEBPACK_IMPORTED_MODULE_0__.z.array(zod__WEBPACK_IMPORTED_MODULE_0__.z.string()).default([]),\n    impactStatement: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    assessmentTools: zod__WEBPACK_IMPORTED_MODULE_0__.z.array(zod__WEBPACK_IMPORTED_MODULE_0__.z.string()).optional(),\n    synthesis: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    isLocked: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false)\n});\n/**\n * Object containing all communication domains/areas (\"functioning\")\n */ const FunctioningSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    receptive: FunctioningSectionSchema.optional(),\n    expressive: FunctioningSectionSchema.optional(),\n    pragmatic: FunctioningSectionSchema.optional(),\n    articulation: FunctioningSectionSchema.optional(),\n    voice: FunctioningSectionSchema.optional(),\n    fluency: FunctioningSectionSchema.optional()\n});\n/**\n * Top-level section for Present Levels, containing the functioning/domain data.\n */ const PresentLevelsSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    functioning: FunctioningSchema.optional(),\n    synthesis: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    isLocked: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false),\n    lockStatus: zod__WEBPACK_IMPORTED_MODULE_0__.z.record(zod__WEBPACK_IMPORTED_MODULE_0__.z.string(), zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean()).optional(),\n    markedDoneStatus: zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        functioning: zod__WEBPACK_IMPORTED_MODULE_0__.z.record(zod__WEBPACK_IMPORTED_MODULE_0__.z.string(), zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean()).optional() // Keys: 'receptive', 'expressive' etc.\n    }).optional()\n});\n/**\n * Assessment results observations sub-section\n */ const AssessmentObservationsSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    classroomObservations: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    playBasedInformalObservations: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    socialInteractionObservations: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    synthesis: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    isLocked: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false),\n    lockStatus: zod__WEBPACK_IMPORTED_MODULE_0__.z.record(zod__WEBPACK_IMPORTED_MODULE_0__.z.string(), zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean()).optional()\n});\n/**\n * Assessment procedures and tools sub-section\n */ const AssessmentProceduresAndToolsSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    overviewOfAssessmentMethods: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    assessmentIntegrityStatement: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    assessmentToolsUsed: zod__WEBPACK_IMPORTED_MODULE_0__.z.array(zod__WEBPACK_IMPORTED_MODULE_0__.z.string()).default([]),\n    synthesis: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    isLocked: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false),\n    lockStatus: zod__WEBPACK_IMPORTED_MODULE_0__.z.record(zod__WEBPACK_IMPORTED_MODULE_0__.z.string(), zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean()).optional()\n});\n/**\n * Assessment results main section schema\n */ const AssessmentResultsSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    observations: AssessmentObservationsSchema.optional(),\n    assessmentProceduresAndTools: AssessmentProceduresAndToolsSchema.optional(),\n    synthesis: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    isLocked: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false),\n    lockStatus: zod__WEBPACK_IMPORTED_MODULE_0__.z.record(zod__WEBPACK_IMPORTED_MODULE_0__.z.string(), zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean()).optional(),\n    markedDoneStatus: zod__WEBPACK_IMPORTED_MODULE_0__.z.record(zod__WEBPACK_IMPORTED_MODULE_0__.z.string(), zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean()).optional()\n});\n/**\n * Background information section schema\n */ const BackgroundSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    studentDemographicsAndBackground: zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        educationalHistory: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n        synthesis: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n        isLocked: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false)\n    }).optional(),\n    healthReport: zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        medicalHistory: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n        visionAndHearingScreening: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n        medicationsAndAllergies: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n        synthesis: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n        isLocked: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false)\n    }).optional(),\n    earlyInterventionHistory: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    familyHistory: zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        familyStructure: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n        languageAndCulturalBackground: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n        socioeconomicFactors: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n        synthesis: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n        isLocked: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false)\n    }).optional(),\n    parentGuardianConcerns: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    synthesis: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    isLocked: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false),\n    lockStatus: zod__WEBPACK_IMPORTED_MODULE_0__.z.record(zod__WEBPACK_IMPORTED_MODULE_0__.z.string(), zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean()).optional(),\n    markedDoneStatus: zod__WEBPACK_IMPORTED_MODULE_0__.z.record(zod__WEBPACK_IMPORTED_MODULE_0__.z.string(), zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean()).optional()\n});\n/**\n * Eligibility determination section schema\n */ const EligibilityDeterminationSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    domains: zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        language: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false),\n        articulation: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false),\n        voice: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false),\n        fluency: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false)\n    }),\n    eligibilityState: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional().default(\"CA\"),\n    eligibilityStatement: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    applicableEdCodeText: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    isPreschool: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().optional(),\n    synthesis: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    isLocked: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false),\n    lockStatus: zod__WEBPACK_IMPORTED_MODULE_0__.z.record(zod__WEBPACK_IMPORTED_MODULE_0__.z.string(), zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean()).optional()\n});\n/**\n * Conclusion summary sub-section schema\n */ const ConclusionSummarySchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    summary: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    synthesis: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    isLocked: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false)\n});\n/**\n * Recommendations sub-section schema\n */ const RecommendationsSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    services: zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        typeOfService: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n        frequency: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n        setting: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional()\n    }).optional(),\n    accommodations: zod__WEBPACK_IMPORTED_MODULE_0__.z.array(zod__WEBPACK_IMPORTED_MODULE_0__.z.string()).default([]),\n    facilitationStrategies: zod__WEBPACK_IMPORTED_MODULE_0__.z.array(zod__WEBPACK_IMPORTED_MODULE_0__.z.string()).default([]),\n    synthesis: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    isLocked: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false)\n});\n/**\n * Glossary sub-section schema\n */ const GlossarySchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    terms: zod__WEBPACK_IMPORTED_MODULE_0__.z.record(zod__WEBPACK_IMPORTED_MODULE_0__.z.string(), zod__WEBPACK_IMPORTED_MODULE_0__.z.string()).default({}),\n    isLocked: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false)\n});\n/**\n * Final conclusions, recommendations, eligibility, and glossary section schema\n */ const ConclusionSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    eligibility: EligibilityDeterminationSchema.optional(),\n    conclusion: ConclusionSummarySchema.optional(),\n    recommendations: RecommendationsSchema.optional(),\n    parentFriendlyGlossary: GlossarySchema.optional(),\n    synthesis: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    isLocked: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false),\n    lockStatus: zod__WEBPACK_IMPORTED_MODULE_0__.z.record(zod__WEBPACK_IMPORTED_MODULE_0__.z.string(), zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean()).optional(),\n    markedDoneStatus: zod__WEBPACK_IMPORTED_MODULE_0__.z.record(zod__WEBPACK_IMPORTED_MODULE_0__.z.string(), zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean()).optional()\n});\n/**\n * Metadata schema\n */ const MetadataSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    lastUpdated: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    version: zod__WEBPACK_IMPORTED_MODULE_0__.z.number().default(1)\n});\n// --- MAIN SPEECH LANGUAGE REPORT SCHEMA ---\nconst SpeechLanguageReportSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    header: HeaderSchema.optional(),\n    background: BackgroundSchema.optional(),\n    presentLevels: PresentLevelsSchema.optional(),\n    assessmentResults: AssessmentResultsSchema.optional(),\n    conclusion: ConclusionSchema.optional(),\n    metadata: MetadataSchema.optional(),\n    synthesis: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional()\n});\n// --- Basic Assessment Tool Type (Expand as needed) ---\nconst AssessmentToolSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    id: zod__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n    name: zod__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n    shortName: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    authors: zod__WEBPACK_IMPORTED_MODULE_0__.z.array(zod__WEBPACK_IMPORTED_MODULE_0__.z.string()).optional(),\n    publisher: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    year: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    targetAgeRange: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    domains: zod__WEBPACK_IMPORTED_MODULE_0__.z.array(zod__WEBPACK_IMPORTED_MODULE_0__.z.string()).optional(),\n    description: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    standardScores: zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        mean: zod__WEBPACK_IMPORTED_MODULE_0__.z.number().optional(),\n        stdDev: zod__WEBPACK_IMPORTED_MODULE_0__.z.number().optional()\n    }).optional(),\n    scoreTypes: zod__WEBPACK_IMPORTED_MODULE_0__.z.array(zod__WEBPACK_IMPORTED_MODULE_0__.z.string()).optional(),\n    isCore: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().optional()\n});\n // Export AssessmentTool type\n // --- NOTE regarding missing exports errors from previous steps ---\n // - 'ReportConclusion' error: Use the exported 'Conclusion' type instead.\n // - 'DomainSection' error: Use the exported 'FunctioningSection' type instead.\n // - 'californiaEdCodes', 'preschoolEdCode': These seem like specific data constants,\n //   not just types. They should be defined and exported from a relevant file\n //   (e.g., '@/lib/eligibilityCodes.ts') or removed from imports if unused.\n //   They are NOT defined within this Zod schema file.\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/types/reportSchemas.ts\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/next@15.2.2_@opentelemetry+api@1.9.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!**********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/next@15.2.2_@opentelemetry+api@1.9.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \**********************************************************************************************************************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next@15.2.2_@opentelemetry+api@1.9.0_react-dom@18.3.1_react@18.3.1__react@18.3.1","vendor-chunks/tr46@0.0.3","vendor-chunks/@supabase+auth-js@2.69.1","vendor-chunks/@supabase+realtime-js@2.11.2","vendor-chunks/@opentelemetry+api@1.9.0","vendor-chunks/@supabase+postgrest-js@1.19.4","vendor-chunks/@supabase+node-fetch@2.6.15","vendor-chunks/whatwg-url@5.0.0","vendor-chunks/@supabase+storage-js@2.7.1","vendor-chunks/@supabase+ssr@0.6.1_@supabase+supabase-js@2.49.4","vendor-chunks/@supabase+supabase-js@2.49.4","vendor-chunks/cookie@1.0.2","vendor-chunks/@supabase+functions-js@2.4.4","vendor-chunks/webidl-conversions@3.0.1","vendor-chunks/uuid@11.1.0","vendor-chunks/zod@3.24.2"], () => (__webpack_exec__("(rsc)/./node_modules/.pnpm/next@15.2.2_@opentelemetry+api@1.9.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fbatch%2Fsubmit%2Froute&page=%2Fapi%2Fbatch%2Fsubmit%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbatch%2Fsubmit%2Froute.ts&appDir=%2FUsers%2Fbrandonbrewer%2FDocuments%2FLinguosity%2FLinguosity%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fbrandonbrewer%2FDocuments%2FLinguosity%2FLinguosity&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();