"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_ssr_src_lib_las-report-generator_js";
exports.ids = ["_ssr_src_lib_las-report-generator_js"];
exports.modules = {

/***/ "(ssr)/./src/lib/las-report-generator.js":
/*!*****************************************!*\
  !*** ./src/lib/las-report-generator.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   exportLASReport: () => (/* binding */ exportLASReport),\n/* harmony export */   generateLASReportDocx: () => (/* binding */ generateLASReportDocx)\n/* harmony export */ });\n/* harmony import */ var docxtemplater__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! docxtemplater */ \"(ssr)/./node_modules/docxtemplater/js/docxtemplater.js\");\n/* harmony import */ var docxtemplater__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(docxtemplater__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var pizzip__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! pizzip */ \"(ssr)/./node_modules/pizzip/js/index.js\");\n/* harmony import */ var pizzip__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(pizzip__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! file-saver */ \"(ssr)/./node_modules/file-saver/dist/FileSaver.min.js\");\n/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(file_saver__WEBPACK_IMPORTED_MODULE_2__);\n/**\n * This file contains utilities for generating LAS Assessment reports from templates\n */ \n\n\n/**\n * Generate a docx file from the LAS Assessment Report template \n * @param reportData - The report data from the application\n * @returns Promise resolving to the generated file as a Blob\n */ async function generateLASReportDocx(reportData) {\n    try {\n        // Create a very simple template for now instead of using the complex one\n        // This will at least allow testing the functionality\n        const simpleTemplate = `\n    <html>\n      <body>\n        <h1>LAS Assessment Report</h1>\n        <p>Student: ${reportData.header?.studentInformation?.firstName || ''} ${reportData.header?.studentInformation?.lastName || ''}</p>\n        <p>DOB: ${reportData.header?.studentInformation?.DOB || ''}</p>\n        <p>Report Date: ${reportData.header?.studentInformation?.reportDate || ''}</p>\n        \n        <h2>Assessment Results</h2>\n        ${Object.entries(reportData.assessmentResults?.domains || {}).filter(([_, domain])=>domain.topicSentence || domain.strengths?.length || domain.needs?.length).map(([domain, data])=>`\n            <h3>${domain.charAt(0).toUpperCase() + domain.slice(1)} Language</h3>\n            <p>${data.topicSentence || ''}</p>\n            ${data.strengths?.length ? `\n              <h4>Strengths:</h4>\n              <ul>\n                ${data.strengths.map((item)=>`<li>${item}</li>`).join('')}\n              </ul>\n            ` : ''}\n            ${data.needs?.length ? `\n              <h4>Needs:</h4>\n              <ul>\n                ${data.needs.map((item)=>`<li>${item}</li>`).join('')}\n              </ul>\n            ` : ''}\n          `).join('')}\n        \n        <h2>Conclusion</h2>\n        <p>${reportData.conclusion?.conclusion?.summary || ''}</p>\n        \n        <h2>Recommendations</h2>\n        ${reportData.conclusion?.recommendations?.accommodations?.length ? `\n          <h3>Accommodations:</h3>\n          <ul>\n            ${reportData.conclusion.recommendations.accommodations.map((item)=>`<li>${item}</li>`).join('')}\n          </ul>\n        ` : ''}\n      </body>\n    </html>\n    `;\n        // Convert the HTML to a Blob\n        const blob = new Blob([\n            simpleTemplate\n        ], {\n            type: 'text/html'\n        });\n        // Generate filename\n        const studentName = reportData.header?.studentInformation?.firstName ? `${reportData.header.studentInformation.firstName}_${reportData.header.studentInformation.lastName}` : 'student';\n        const timestamp = new Date().toISOString().split('T')[0];\n        const filename = `${studentName.replace(/\\s+/g, '_')}_LAS_report_${timestamp}.html`;\n        // Save as HTML for now (as a workaround)\n        if (false) {}\n        // Return the blob\n        return blob;\n    } catch (error) {\n        console.error('Error generating LAS report:', error);\n        throw error;\n    }\n}\n/**\n * Helper function to format dates nicely (not currently used but kept for future reference)\n * @param dateStr String date to format\n * @returns Formatted date string\n */ function formatDate(dateStr) {\n    if (!dateStr) return '';\n    try {\n        const date = new Date(dateStr);\n        return date.toLocaleDateString('en-US', {\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric'\n        });\n    } catch (e) {\n        return dateStr;\n    }\n}\n/**\n * Helper function to export the LAS report with a button click\n * @param reportData - The report data to export\n */ function exportLASReport(reportData) {\n    if (!reportData) {\n        console.error('No report data provided for export');\n        return;\n    }\n    console.log('Generating simple HTML report as a temporary solution...');\n    return generateLASReportDocx(reportData);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/lib/las-report-generator.js\n");

/***/ })

};
;