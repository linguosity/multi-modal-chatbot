"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/[userId]/reports/[reportId]/page",{

/***/ "(app-pages-browser)/./src/types/reportSchemas.ts":
/*!************************************!*\
  !*** ./src/types/reportSchemas.ts ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AssessmentResultsSchema: () => (/* binding */ AssessmentResultsSchema),\n/* harmony export */   BackgroundSchema: () => (/* binding */ BackgroundSchema),\n/* harmony export */   ConclusionSchema: () => (/* binding */ ConclusionSchema),\n/* harmony export */   FunctioningSchema: () => (/* binding */ FunctioningSchema),\n/* harmony export */   FunctioningSectionSchema: () => (/* binding */ FunctioningSectionSchema),\n/* harmony export */   HeaderSchema: () => (/* binding */ HeaderSchema),\n/* harmony export */   MetadataSchema: () => (/* binding */ MetadataSchema),\n/* harmony export */   PresentLevelsSchema: () => (/* binding */ PresentLevelsSchema),\n/* harmony export */   ReferralSchema: () => (/* binding */ ReferralSchema),\n/* harmony export */   SpeechLanguageReportSchema: () => (/* binding */ SpeechLanguageReportSchema),\n/* harmony export */   StudentInformationSchema: () => (/* binding */ StudentInformationSchema)\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod */ \"(app-pages-browser)/./node_modules/.pnpm/zod@3.24.2/node_modules/zod/lib/index.mjs\");\n// FILE: reportSchema.ts (Refactored for Present Levels + Assessment Tools Structure)\n// THIS IS THE FILE YOU SHOULD EDIT\n\n/**\n * Basic student info captured at the beginning of the report\n */ const StudentInformationSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    firstName: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().min(1, \"First name is required\"),\n    lastName: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().min(1, \"Last name is required\"),\n    DOB: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    reportDate: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    evaluationDate: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    parents: zod__WEBPACK_IMPORTED_MODULE_0__.z.array(zod__WEBPACK_IMPORTED_MODULE_0__.z.string()).default([]),\n    homeLanguage: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().default(\"English\"),\n    grade: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    eligibility: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    secondaryEligibility: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    school: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    teacher: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    evaluator: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    caseManager: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional()\n});\n/**\n * Basic intake/referral reasoning\n */ const ReferralSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    reasonForReferral: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    confidentialityStatement: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional()\n});\n/**\n * Top-level header section\n */ const HeaderSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    studentInformation: StudentInformationSchema,\n    reasonForReferral: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    confidentialityStatement: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    // Add lock/synthesis directly if needed, or extend a base schema later\n    synthesis: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    isLocked: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false),\n    lockStatus: zod__WEBPACK_IMPORTED_MODULE_0__.z.record(zod__WEBPACK_IMPORTED_MODULE_0__.z.string(), zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean()).optional()\n});\n/**\n * Section describing observed and assessed communication functioning (A single domain)\n * This remains the definition for ONE domain's data.\n */ const FunctioningSectionSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    isConcern: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false),\n    topicSentence: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    strengths: zod__WEBPACK_IMPORTED_MODULE_0__.z.array(zod__WEBPACK_IMPORTED_MODULE_0__.z.string()).default([]),\n    needs: zod__WEBPACK_IMPORTED_MODULE_0__.z.array(zod__WEBPACK_IMPORTED_MODULE_0__.z.string()).default([]),\n    impactStatement: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    assessmentTools: zod__WEBPACK_IMPORTED_MODULE_0__.z.array(zod__WEBPACK_IMPORTED_MODULE_0__.z.string()).optional(),\n    synthesis: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    isLocked: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false)\n});\n/**\n * Object containing all communication domains/areas (\"functioning\")\n */ const FunctioningSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    receptive: FunctioningSectionSchema.optional(),\n    expressive: FunctioningSectionSchema.optional(),\n    pragmatic: FunctioningSectionSchema.optional(),\n    articulation: FunctioningSectionSchema.optional(),\n    voice: FunctioningSectionSchema.optional(),\n    fluency: FunctioningSectionSchema.optional()\n});\n// <<< NEW SCHEMA for the Present Levels Section >>>\n/**\n * Top-level section for Present Levels, containing the functioning/domain data.\n */ const PresentLevelsSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    functioning: FunctioningSchema.optional(),\n    synthesis: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    isLocked: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false),\n    lockStatus: zod__WEBPACK_IMPORTED_MODULE_0__.z.record(zod__WEBPACK_IMPORTED_MODULE_0__.z.string(), zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean()).optional()\n});\n// <<< END NEW SCHEMA >>>\n// <<< REFACTORED SCHEMA for Assessment Results (Tools/Observations ONLY) >>>\n/**\n * Assessment procedures and observations.\n * 'functioning' (domains) has been MOVED to PresentLevelsSchema.\n */ const AssessmentResultsSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    observations: zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        classroomObservations: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n        playBasedInformalObservations: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n        socialInteractionObservations: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n        synthesis: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n        isLocked: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false),\n        lockStatus: zod__WEBPACK_IMPORTED_MODULE_0__.z.record(zod__WEBPACK_IMPORTED_MODULE_0__.z.string(), zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean()).optional()\n    }).optional(),\n    assessmentProceduresAndTools: zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        overviewOfAssessmentMethods: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n        assessmentToolsUsed: zod__WEBPACK_IMPORTED_MODULE_0__.z.array(zod__WEBPACK_IMPORTED_MODULE_0__.z.string()).default([]),\n        synthesis: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n        isLocked: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false),\n        lockStatus: zod__WEBPACK_IMPORTED_MODULE_0__.z.record(zod__WEBPACK_IMPORTED_MODULE_0__.z.string(), zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean()).optional()\n    }).optional(),\n    // functioning: REMOVED FROM HERE\n    synthesis: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    isLocked: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false),\n    lockStatus: zod__WEBPACK_IMPORTED_MODULE_0__.z.record(zod__WEBPACK_IMPORTED_MODULE_0__.z.string(), zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean()).optional()\n});\n// <<< END REFACTORED SCHEMA >>>\n/**\n * Background information section schema\n */ const BackgroundSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    studentDemographicsAndBackground: zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        educationalHistory: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n        synthesis: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n        isLocked: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false)\n    }).optional(),\n    healthReport: zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        medicalHistory: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n        visionAndHearingScreening: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n        medicationsAndAllergies: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n        synthesis: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n        isLocked: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false)\n    }).optional(),\n    earlyInterventionHistory: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    familyHistory: zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        familyStructure: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n        languageAndCulturalBackground: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n        socioeconomicFactors: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n        synthesis: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n        isLocked: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false)\n    }).optional(),\n    parentGuardianConcerns: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    synthesis: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    isLocked: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false),\n    lockStatus: zod__WEBPACK_IMPORTED_MODULE_0__.z.record(zod__WEBPACK_IMPORTED_MODULE_0__.z.string(), zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean()).optional()\n});\n/**\n * Final conclusions and educational implications section schema\n */ const ConclusionSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    eligibility: zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        domains: zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n            language: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false),\n            articulation: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false),\n            voice: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false),\n            fluency: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false)\n        }),\n        californiaEdCode: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n        isPreschool: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().optional(),\n        synthesis: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n        isLocked: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false)\n    }).optional(),\n    conclusion: zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        summary: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n        synthesis: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n        isLocked: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false)\n    }).optional(),\n    recommendations: zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        services: zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n            typeOfService: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n            frequency: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n            setting: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional()\n        }).optional(),\n        accommodations: zod__WEBPACK_IMPORTED_MODULE_0__.z.array(zod__WEBPACK_IMPORTED_MODULE_0__.z.string()).default([]),\n        facilitationStrategies: zod__WEBPACK_IMPORTED_MODULE_0__.z.array(zod__WEBPACK_IMPORTED_MODULE_0__.z.string()).default([]),\n        synthesis: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n        isLocked: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false)\n    }).optional(),\n    parentFriendlyGlossary: zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        terms: zod__WEBPACK_IMPORTED_MODULE_0__.z.record(zod__WEBPACK_IMPORTED_MODULE_0__.z.string(), zod__WEBPACK_IMPORTED_MODULE_0__.z.string()).default({}),\n        isLocked: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false)\n    }).optional(),\n    synthesis: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    isLocked: zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean().default(false),\n    lockStatus: zod__WEBPACK_IMPORTED_MODULE_0__.z.record(zod__WEBPACK_IMPORTED_MODULE_0__.z.string(), zod__WEBPACK_IMPORTED_MODULE_0__.z.boolean()).optional()\n});\n/**\n * Metadata schema\n */ const MetadataSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    lastUpdated: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n    version: zod__WEBPACK_IMPORTED_MODULE_0__.z.number().default(1)\n});\n// <<< MAIN SPEECH LANGUAGE REPORT SCHEMA (Refactored Structure) >>>\nconst SpeechLanguageReportSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    header: HeaderSchema.optional(),\n    background: BackgroundSchema.optional(),\n    presentLevels: PresentLevelsSchema.optional(),\n    assessmentResults: AssessmentResultsSchema.optional(),\n    conclusion: ConclusionSchema.optional(),\n    metadata: MetadataSchema.optional(),\n    synthesis: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional()\n});\n // NOTE: The separate `reportTypes.ts` file with `interface` definitions is likely\n // no longer needed and can potentially be removed to avoid maintaining two sources.\n // Rely on these inferred types exported from the Zod schema file.\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/types/reportSchemas.ts\n"));

/***/ })

});